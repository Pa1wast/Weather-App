{"mappings":"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","sources":["<anon>","src/js/controller.js","src/js/model.js","src/js/helper.js","src/js/view/view.js"],"sourcesContent":["const $d3824bf2ef2465db$export$a9861bd62f48e142 = \"ecdfbd386d04459d8a9100346231710\";\nasync function $d3824bf2ef2465db$export$adb4bb4243526aef(latitude, longitude, API_KEY, requestType) {\n    const response = await fetch(`http://api.weatherapi.com/v1/${requestType}.json?key=${API_KEY}&q=${latitude},${longitude}&days=${3}aqi=no`);\n    const data = await response.json();\n    return data;\n}\nfunction $d3824bf2ef2465db$export$39e042fd83f1b62e(position, state) {\n    state.position.latitude = position.coords.latitude;\n    state.position.longitude = position.coords.longitude;\n}\n\n\nconst $0f1d4402dffacf5b$export$ca000e230c0caa3e = {\n    position: {},\n    weatherData: {},\n    curUnit: \"\\xb0C\",\n    date: {\n        time: {\n            hour: \"\",\n            minute: \"\",\n            seconds: \"\"\n        },\n        day: \"\"\n    }\n};\nfunction $0f1d4402dffacf5b$var$getDate() {\n    setInterval(()=>{\n        const days = [\n            \"Sunday\",\n            \"Monday\",\n            \"Tuesday\",\n            \"Wednesday\",\n            \"Thursday\",\n            \"Friday\",\n            \"Saturday\"\n        ];\n        const curDay = document.querySelector(\"[data-current-day]\");\n        const curTime = document.querySelector(\"[data-current-time]\");\n        const curTimeUnit = document.querySelector(\"[data-current-time-unit]\");\n        const curDate = new Date();\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.date = {\n            time: {\n                hour: curDate.getHours() > 12 ? curDate.getHours() - 12 : curDate.getHours(),\n                minute: curDate.getMinutes(),\n                seconds: curDate.getSeconds()\n            },\n            day: days[curDate.getDay()]\n        };\n        curDay.innerHTML = `${$0f1d4402dffacf5b$export$ca000e230c0caa3e.date.day},`;\n        curTime.innerHTML = `${$0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.hour.toString()}:${$0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.minute < 10 ? \"0\" + $0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.minute.toString() : $0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.minute.toString()}:${$0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.seconds < 10 ? \"0\" + $0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.seconds.toString() : $0f1d4402dffacf5b$export$ca000e230c0caa3e.date.time.seconds.toString()}`;\n        curTimeUnit.innerHTML = `${curDate.getHours() >= 12 ? \"PM\" : \"AM\"}`;\n    }, 1000);\n}\n$0f1d4402dffacf5b$var$getDate();\n//////////////////////////////////////////////////////////\nconst $0f1d4402dffacf5b$var$userLocation = new Promise((resolve, reject)=>{\n    if (navigator.geolocation) navigator.geolocation.getCurrentPosition((position)=>{\n        resolve((0, $d3824bf2ef2465db$export$39e042fd83f1b62e)(position, $0f1d4402dffacf5b$export$ca000e230c0caa3e));\n    });\n    else reject(\"Can't access your position!\");\n});\nasync function $0f1d4402dffacf5b$export$2e592910e568afd0() {\n    await $0f1d4402dffacf5b$var$userLocation;\n    const data = await (0, $d3824bf2ef2465db$export$adb4bb4243526aef)($0f1d4402dffacf5b$export$ca000e230c0caa3e.position.latitude, $0f1d4402dffacf5b$export$ca000e230c0caa3e.position.longitude, (0, $d3824bf2ef2465db$export$a9861bd62f48e142), \"forecast\");\n    $0f1d4402dffacf5b$var$updateState(data);\n}\nasync function $0f1d4402dffacf5b$export$e7fd20fad3cf4b5f(cityName) {\n    try {\n        const response = await fetch(`https://geocode.maps.co/search?q=${cityName}`);\n        const data = await response.json();\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.position.latitude = data[0].lat;\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.position.longitude = data[0].lon;\n        $0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.cityName = data[0].display_name.split(\" \")[0].replace(\",\", \"\");\n    } catch (err) {\n        throw err;\n    }\n}\nasync function $0f1d4402dffacf5b$export$7a171f172be0782e(cityName) {\n    try {\n        await $0f1d4402dffacf5b$export$e7fd20fad3cf4b5f(cityName);\n        console.log($0f1d4402dffacf5b$export$ca000e230c0caa3e.position);\n        const data = await (0, $d3824bf2ef2465db$export$adb4bb4243526aef)($0f1d4402dffacf5b$export$ca000e230c0caa3e.position.latitude, $0f1d4402dffacf5b$export$ca000e230c0caa3e.position.longitude, (0, $d3824bf2ef2465db$export$a9861bd62f48e142), \"forecast\");\n        $0f1d4402dffacf5b$var$updateState(data);\n    } catch (err) {\n        throw err;\n    }\n}\nfunction $0f1d4402dffacf5b$var$updateState(data) {\n    const curData = data.current;\n    const curForecast = data.forecast;\n    const curLocation = data.location;\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData = {\n        cityName: curLocation.name,\n        tempC: curData.temp_c,\n        tempF: curData.temp_f,\n        icon: curData.condition.icon,\n        description: curData.condition.text,\n        highlights: {\n            flTempC: curData.feelslike_c,\n            flTempF: curData.feelslike_f,\n            highTempC: curForecast.forecastday[0].day.maxtemp_c,\n            highTempF: curForecast.forecastday[0].day.maxtemp_f,\n            lowTempC: curForecast.forecastday[0].day.mintemp_c,\n            lowTempF: curForecast.forecastday[0].day.mintemp_f,\n            avgTempC: curForecast.forecastday[0].day.avgtemp_c,\n            avgTempF: curForecast.forecastday[0].day.avgtemp_f,\n            wind: {\n                windSpeed: curData.wind_kph,\n                windDegree: curData.wind_degree\n            }\n        },\n        forecast: {\n            text: [\n                curForecast.forecastday[0].astro.sunrise,\n                curForecast.forecastday[0].astro.sunset\n            ],\n            forecastHour: curForecast.forecastday[0].hour.map((obj, i)=>{\n                let time = obj.time.split(\" \")[1];\n                if (time === \"00:00\") time = \"12:00\";\n                if (i < 12) time = time + \" AM\";\n                else time !== \"12:00\" ? time = time.slice(0, 2) - 12 + \":00 PM\" : time = time + \" PM\";\n                obj = {\n                    time: time,\n                    tempC: obj.temp_c,\n                    tempF: obj.temp_f\n                };\n                return obj;\n            })\n        }\n    };\n}\n\n\nclass $3a395c083ce013f4$var$WeatherDisplay {\n    currentIcon = document.querySelector(\"[   data-current-weather-icon]\");\n    weatherCardDate = document.querySelectorAll(\".weather-card-date\");\n    weatherCardIcon = document.querySelectorAll(\".data-weather-card-icon\");\n    weatherCardTemps = document.querySelectorAll(\".weather-card-temps\");\n    highlightTitle = document.querySelectorAll(\".highlight-card-title\");\n    highlightDetails = document.querySelectorAll(\".highlight-card-data-details\");\n    highlightDescription = document.querySelectorAll(\".highlight-card-description\");\n    units = document.querySelector(\".switch-temp-unit\");\n    unitC = document.querySelector(\".C\");\n    unitF = document.querySelector(\".F\");\n    curTemp = document.querySelector(\"[data-current-weather-temp]\");\n    curUnit = document.querySelector(\"[data-current-temp-unit]\");\n    curText = document.querySelector(\"[data-current-forcast-text]\");\n    curTextExtra = document.querySelector(\"[data-current-forcast-text-extra]\");\n    curCity = document.querySelector(\"[data-city-name]\");\n    searchBarContainer = document.querySelector(\".search-bar\");\n    searchBar = document.querySelector(\"[data-search-bar]\");\n    searchIcon = document.querySelector(\".search-icon\");\n    updateCurIcon(iconSrc) {\n        this.currentIcon.src = iconSrc;\n    }\n    updateTemp(temp, unit) {\n        this.curTemp.innerText = temp;\n        this.curUnit.innerText = unit;\n    }\n    updateCurText(textArr, cityName) {\n        this.curText.innerText = \"Sunrise - \" + textArr[0];\n        this.curTextExtra.innerText = \"Sunset - \" + textArr[1];\n        this.curCity.innerText = cityName;\n    }\n    updateWeatherCards(forecastHour, unit = \"\\xb0C\", type = \"today\") {\n        const curTime = new Date();\n        const curHour = curTime.getHours();\n        const tempHours = curHour >= 17 ? [\n            ...forecastHour.slice(curHour + 1),\n            ...forecastHour.slice(0, 17)\n        ] : [\n            ...forecastHour.slice(curHour + 1)\n        ];\n        this.weatherCardDate.forEach((date, i)=>{\n            date.innerText = tempHours[i].time;\n        });\n        this.weatherCardTemps.forEach((temp, i)=>{\n            if (unit === \"\\xb0C\") temp.innerText = forecastHour[i].tempC + \"\\xb0\";\n            else temp.innerText = forecastHour[i].tempF + \"\\xb0\";\n        });\n    }\n    updateHighlightCards(weatherData, unit = \"\\xb0C\") {\n        const tempElements = Array.from(this.highlightDetails);\n        const windElements = tempElements.splice(-2);\n        const highlights = Array.from(Object.values(weatherData.highlights));\n        const windDetails = highlights.pop(-1);\n        const highlightsC = highlights.filter((tempC, i)=>{\n            if (i % 2 === 0) return tempC;\n        });\n        const highlightsF = highlights.filter((tempF, i)=>{\n            if (i % 2 !== 0) return tempF;\n        });\n        tempElements.forEach((detail, i)=>{\n            if (unit === \"\\xb0C\" && i <= 4) {\n                detail.querySelector(\".data-value\").innerText = Math.round(highlightsC[i]);\n                detail.querySelector(\".value-unit\").innerText = \"\\xb0C\";\n            } else if (unit === \"\\xb0F\") {\n                detail.querySelector(\".data-value\").innerText = Math.round(highlightsF[i]);\n                detail.querySelector(\".value-unit\").innerText = \"\\xb0F\";\n            }\n        });\n        windElements.forEach((windEl, i)=>{\n            if (i === 0) windEl.querySelector(\".data-value\").innerText = Math.round(windDetails.windSpeed);\n            else windEl.querySelector(\".data-value\").innerText = Math.round(windDetails.windDegree);\n        });\n    }\n    addSwitchUnitHandler(handler) {\n        this.units.addEventListener(\"click\", (e)=>{\n            if (!e.target.classList.contains(\"button-switch-unit\")) return;\n            const buttons = Array.from(this.units.children);\n            buttons.forEach((button)=>button.classList.remove(\"active-temp-unit\"));\n            const activeButton = e.target;\n            activeButton.classList.add(\"active-temp-unit\");\n            const curUnit = activeButton.innerText;\n            handler(curUnit);\n        });\n    }\n    addSearchHandler(handler) {\n        this.searchBar.addEventListener(\"keypress\", (e)=>{\n            if (e.key === \"Enter\") {\n                if (!e.target.value) {\n                    this.ErrorMessage();\n                    return;\n                }\n                handler(e.target.value);\n                e.target.value = \"\";\n                this.ErrorMessage(\"hide\");\n            }\n        });\n        this.searchIcon.addEventListener(\"click\", ()=>{\n            const inputValue = this.searchBar.value;\n            if (!inputValue) {\n                this.ErrorMessage();\n                return;\n            }\n            handler(inputValue);\n            this.searchBar.value = \"\";\n            this.ErrorMessage(\"hide\");\n        });\n    }\n    ErrorMessage(state = \"show\") {\n        if (state === \"show\") this.searchBarContainer.classList.add(\"error\");\n        else if (state === \"hide\") this.searchBarContainer.classList.remove(\"error\");\n    }\n}\nvar $3a395c083ce013f4$export$2e2bcd8739ae039 = new $3a395c083ce013f4$var$WeatherDisplay();\n\n\n\nasync function $f50bd1f2915ed0f2$var$updateDisplay() {\n    await $0f1d4402dffacf5b$export$2e592910e568afd0();\n    (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateCurIcon($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.icon);\n    if ($0f1d4402dffacf5b$export$ca000e230c0caa3e.curUnit === \"\\xb0C\") {\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateTemp($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.tempC, \"\\xb0C\");\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateWeatherCards($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.forecast.forecastHour, \"\\xb0C\");\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateHighlightCards($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData, \"\\xb0C\");\n    } else {\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateTemp($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.tempF, \"\\xb0F\");\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateWeatherCards($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.forecast.forecastHour, \"\\xb0F\");\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateHighlightCards($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData, \"\\xb0F\");\n    }\n    (0, $3a395c083ce013f4$export$2e2bcd8739ae039).updateCurText($0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.forecast.text, $0f1d4402dffacf5b$export$ca000e230c0caa3e.weatherData.cityName);\n}\n$f50bd1f2915ed0f2$var$updateDisplay();\nfunction $f50bd1f2915ed0f2$var$controlSwitchUnit(unit) {\n    $0f1d4402dffacf5b$export$ca000e230c0caa3e.curUnit = unit;\n    $f50bd1f2915ed0f2$var$updateDisplay();\n}\nasync function $f50bd1f2915ed0f2$var$controlSearch(cityName) {\n    try {\n        await $0f1d4402dffacf5b$export$7a171f172be0782e(cityName);\n        $f50bd1f2915ed0f2$var$updateDisplay();\n    } catch (err) {\n        (0, $3a395c083ce013f4$export$2e2bcd8739ae039).ErrorMessage();\n    }\n}\nfunction $f50bd1f2915ed0f2$var$init() {\n    (0, $3a395c083ce013f4$export$2e2bcd8739ae039).addSwitchUnitHandler($f50bd1f2915ed0f2$var$controlSwitchUnit);\n    (0, $3a395c083ce013f4$export$2e2bcd8739ae039).addSearchHandler($f50bd1f2915ed0f2$var$controlSearch);\n}\n$f50bd1f2915ed0f2$var$init();\n\n\n//# sourceMappingURL=index.6b6f4d70.js.map\n","import * as model from './model.js';\r\nimport view from './view/view.js';\r\nimport {} from './helper.js';\r\n\r\nasync function updateDisplay() {\r\n  await model.getDataFromUser();\r\n  view.updateCurIcon(model.state.weatherData.icon);\r\n\r\n  if (model.state.curUnit === '°C') {\r\n    view.updateTemp(model.state.weatherData.tempC, '°C');\r\n    view.updateWeatherCards(\r\n      model.state.weatherData.forecast.forecastHour,\r\n      '°C'\r\n    );\r\n    view.updateHighlightCards(model.state.weatherData, '°C');\r\n  } else {\r\n    view.updateTemp(model.state.weatherData.tempF, '°F');\r\n    view.updateWeatherCards(\r\n      model.state.weatherData.forecast.forecastHour,\r\n      '°F'\r\n    );\r\n    view.updateHighlightCards(model.state.weatherData, '°F');\r\n  }\r\n\r\n  view.updateCurText(\r\n    model.state.weatherData.forecast.text,\r\n    model.state.weatherData.cityName\r\n  );\r\n}\r\nupdateDisplay();\r\n\r\nfunction controlSwitchUnit(unit) {\r\n  model.state.curUnit = unit;\r\n  updateDisplay();\r\n}\r\n\r\nasync function controlSearch(cityName) {\r\n  try {\r\n    await model.getData(cityName);\r\n    updateDisplay();\r\n  } catch (err) {\r\n    view.ErrorMessage();\r\n  }\r\n}\r\n\r\nfunction init() {\r\n  view.addSwitchUnitHandler(controlSwitchUnit);\r\n  view.addSearchHandler(controlSearch);\r\n}\r\n\r\ninit();\r\n","import { API_KEY, getCoords, fetchApi } from './helper.js';\r\n\r\nexport const state = {\r\n  position: {},\r\n  weatherData: {},\r\n  curUnit: '°C',\r\n  date: {\r\n    time: {\r\n      hour: '',\r\n      minute: '',\r\n      seconds: '',\r\n    },\r\n    day: '',\r\n  },\r\n};\r\n\r\nfunction getDate() {\r\n  setInterval(() => {\r\n    const days = [\r\n      'Sunday',\r\n      'Monday',\r\n      'Tuesday',\r\n      'Wednesday',\r\n      'Thursday',\r\n      'Friday',\r\n      'Saturday',\r\n    ];\r\n\r\n    const curDay = document.querySelector('[data-current-day]');\r\n    const curTime = document.querySelector('[data-current-time]');\r\n    const curTimeUnit = document.querySelector('[data-current-time-unit]');\r\n\r\n    const curDate = new Date();\r\n    state.date = {\r\n      time: {\r\n        hour:\r\n          curDate.getHours() > 12\r\n            ? curDate.getHours() - 12\r\n            : curDate.getHours(),\r\n        minute: curDate.getMinutes(),\r\n        seconds: curDate.getSeconds(),\r\n      },\r\n      day: days[curDate.getDay()],\r\n    };\r\n\r\n    curDay.innerHTML = `${state.date.day},`;\r\n\r\n    curTime.innerHTML = `${state.date.time.hour.toString()}:${\r\n      state.date.time.minute < 10\r\n        ? '0' + state.date.time.minute.toString()\r\n        : state.date.time.minute.toString()\r\n    }:${\r\n      state.date.time.seconds < 10\r\n        ? '0' + state.date.time.seconds.toString()\r\n        : state.date.time.seconds.toString()\r\n    }`;\r\n\r\n    curTimeUnit.innerHTML = `${curDate.getHours() >= 12 ? 'PM' : 'AM'}`;\r\n  }, 1000);\r\n}\r\n\r\ngetDate();\r\n\r\n//////////////////////////////////////////////////////////\r\n\r\nconst userLocation = new Promise((resolve, reject) => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(position => {\r\n      resolve(getCoords(position, state));\r\n    });\r\n  } else {\r\n    reject(\"Can't access your position!\");\r\n  }\r\n});\r\n\r\nexport async function getDataFromUser() {\r\n  await userLocation;\r\n  const data = await fetchApi(\r\n    state.position.latitude,\r\n    state.position.longitude,\r\n    API_KEY,\r\n    'forecast'\r\n  );\r\n\r\n  updateState(data);\r\n}\r\n\r\nexport async function getLocation(cityName) {\r\n  try {\r\n    const response = await fetch(\r\n      `https://geocode.maps.co/search?q=${cityName}`\r\n    );\r\n    const data = await response.json();\r\n    state.position.latitude = data[0].lat;\r\n    state.position.longitude = data[0].lon;\r\n    state.weatherData.cityName = data[0].display_name\r\n      .split(' ')[0]\r\n      .replace(',', '');\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport async function getData(cityName) {\r\n  try {\r\n    await getLocation(cityName);\r\n    console.log(state.position);\r\n    const data = await fetchApi(\r\n      state.position.latitude,\r\n      state.position.longitude,\r\n      API_KEY,\r\n      'forecast'\r\n    );\r\n    updateState(data);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nfunction updateState(data) {\r\n  const curData = data.current;\r\n  const curForecast = data.forecast;\r\n  const curLocation = data.location;\r\n  state.weatherData = {\r\n    cityName: curLocation.name,\r\n    tempC: curData.temp_c,\r\n    tempF: curData.temp_f,\r\n\r\n    icon: curData.condition.icon,\r\n    description: curData.condition.text,\r\n    highlights: {\r\n      flTempC: curData.feelslike_c,\r\n      flTempF: curData.feelslike_f,\r\n      highTempC: curForecast.forecastday[0].day.maxtemp_c,\r\n      highTempF: curForecast.forecastday[0].day.maxtemp_f,\r\n      lowTempC: curForecast.forecastday[0].day.mintemp_c,\r\n      lowTempF: curForecast.forecastday[0].day.mintemp_f,\r\n      avgTempC: curForecast.forecastday[0].day.avgtemp_c,\r\n      avgTempF: curForecast.forecastday[0].day.avgtemp_f,\r\n      wind: {\r\n        windSpeed: curData.wind_kph,\r\n        windDegree: curData.wind_degree,\r\n      },\r\n    },\r\n    forecast: {\r\n      text: [\r\n        curForecast.forecastday[0].astro.sunrise,\r\n        curForecast.forecastday[0].astro.sunset,\r\n      ],\r\n      forecastHour: curForecast.forecastday[0].hour.map((obj, i) => {\r\n        let time = obj.time.split(' ')[1];\r\n        if (time === '00:00') time = '12:00';\r\n        if (i < 12) {\r\n          time = time + ' AM';\r\n        } else {\r\n          time !== '12:00'\r\n            ? (time = time.slice(0, 2) - 12 + ':00 PM')\r\n            : (time = time + ' PM');\r\n        }\r\n        obj = {\r\n          time: time,\r\n          tempC: obj.temp_c,\r\n          tempF: obj.temp_f,\r\n        };\r\n        return obj;\r\n      }),\r\n    },\r\n  };\r\n}\r\n","export const API_KEY = 'ecdfbd386d04459d8a9100346231710';\r\n\r\nexport async function fetchApi(latitude, longitude, API_KEY, requestType) {\r\n  const response = await fetch(\r\n    `http://api.weatherapi.com/v1/${requestType}.json?key=${API_KEY}&q=${latitude},${longitude}&days=${3}aqi=no`\r\n  );\r\n\r\n  const data = await response.json();\r\n  return data;\r\n}\r\n\r\nexport function getCoords(position, state) {\r\n  state.position.latitude = position.coords.latitude;\r\n  state.position.longitude = position.coords.longitude;\r\n}\r\n","class WeatherDisplay {\r\n  currentIcon = document.querySelector('[   data-current-weather-icon]');\r\n\r\n  weatherCardDate = document.querySelectorAll('.weather-card-date');\r\n  weatherCardIcon = document.querySelectorAll('.data-weather-card-icon');\r\n  weatherCardTemps = document.querySelectorAll('.weather-card-temps');\r\n\r\n  highlightTitle = document.querySelectorAll('.highlight-card-title');\r\n  highlightDetails = document.querySelectorAll('.highlight-card-data-details');\r\n  highlightDescription = document.querySelectorAll(\r\n    '.highlight-card-description'\r\n  );\r\n\r\n  units = document.querySelector('.switch-temp-unit');\r\n  unitC = document.querySelector('.C');\r\n  unitF = document.querySelector('.F');\r\n\r\n  curTemp = document.querySelector('[data-current-weather-temp]');\r\n  curUnit = document.querySelector('[data-current-temp-unit]');\r\n\r\n  curText = document.querySelector('[data-current-forcast-text]');\r\n  curTextExtra = document.querySelector('[data-current-forcast-text-extra]');\r\n  curCity = document.querySelector('[data-city-name]');\r\n\r\n  searchBarContainer = document.querySelector('.search-bar');\r\n  searchBar = document.querySelector('[data-search-bar]');\r\n  searchIcon = document.querySelector('.search-icon');\r\n\r\n  updateCurIcon(iconSrc) {\r\n    this.currentIcon.src = iconSrc;\r\n  }\r\n\r\n  updateTemp(temp, unit) {\r\n    this.curTemp.innerText = temp;\r\n    this.curUnit.innerText = unit;\r\n  }\r\n\r\n  updateCurText(textArr, cityName) {\r\n    this.curText.innerText = 'Sunrise - ' + textArr[0];\r\n    this.curTextExtra.innerText = 'Sunset - ' + textArr[1];\r\n    this.curCity.innerText = cityName;\r\n  }\r\n\r\n  updateWeatherCards(forecastHour, unit = '°C', type = 'today') {\r\n    const curTime = new Date();\r\n    const curHour = curTime.getHours();\r\n    const tempHours =\r\n      curHour >= 17\r\n        ? [...forecastHour.slice(curHour + 1), ...forecastHour.slice(0, 17)]\r\n        : [...forecastHour.slice(curHour + 1)];\r\n\r\n    this.weatherCardDate.forEach((date, i) => {\r\n      date.innerText = tempHours[i].time;\r\n    });\r\n\r\n    this.weatherCardTemps.forEach((temp, i) => {\r\n      if (unit === '°C') {\r\n        temp.innerText = forecastHour[i].tempC + '°';\r\n      } else {\r\n        temp.innerText = forecastHour[i].tempF + '°';\r\n      }\r\n    });\r\n  }\r\n\r\n  updateHighlightCards(weatherData, unit = '°C') {\r\n    const tempElements = Array.from(this.highlightDetails);\r\n    const windElements = tempElements.splice(-2);\r\n    const highlights = Array.from(Object.values(weatherData.highlights));\r\n    const windDetails = highlights.pop(-1);\r\n    const highlightsC = highlights.filter((tempC, i) => {\r\n      if (i % 2 === 0) return tempC;\r\n    });\r\n    const highlightsF = highlights.filter((tempF, i) => {\r\n      if (i % 2 !== 0) return tempF;\r\n    });\r\n    tempElements.forEach((detail, i) => {\r\n      if (unit === '°C' && i <= 4) {\r\n        detail.querySelector('.data-value').innerText = Math.round(\r\n          highlightsC[i]\r\n        );\r\n        detail.querySelector('.value-unit').innerText = '°C';\r\n      } else if (unit === '°F') {\r\n        detail.querySelector('.data-value').innerText = Math.round(\r\n          highlightsF[i]\r\n        );\r\n        detail.querySelector('.value-unit').innerText = '°F';\r\n      }\r\n    });\r\n    windElements.forEach((windEl, i) => {\r\n      if (i === 0) {\r\n        windEl.querySelector('.data-value').innerText = Math.round(\r\n          windDetails.windSpeed\r\n        );\r\n      } else {\r\n        windEl.querySelector('.data-value').innerText = Math.round(\r\n          windDetails.windDegree\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  addSwitchUnitHandler(handler) {\r\n    this.units.addEventListener('click', e => {\r\n      if (!e.target.classList.contains('button-switch-unit')) return;\r\n      const buttons = Array.from(this.units.children);\r\n      buttons.forEach(button => button.classList.remove('active-temp-unit'));\r\n      const activeButton = e.target;\r\n      activeButton.classList.add('active-temp-unit');\r\n      const curUnit = activeButton.innerText;\r\n      handler(curUnit);\r\n    });\r\n  }\r\n\r\n  addSearchHandler(handler) {\r\n    this.searchBar.addEventListener('keypress', e => {\r\n      if (e.key === 'Enter') {\r\n        if (!e.target.value) {\r\n          this.ErrorMessage();\r\n          return;\r\n        }\r\n        handler(e.target.value);\r\n        e.target.value = '';\r\n        this.ErrorMessage('hide');\r\n      }\r\n    });\r\n\r\n    this.searchIcon.addEventListener('click', () => {\r\n      const inputValue = this.searchBar.value;\r\n      if (!inputValue) {\r\n        this.ErrorMessage();\r\n        return;\r\n      }\r\n      handler(inputValue);\r\n      this.searchBar.value = '';\r\n      this.ErrorMessage('hide');\r\n    });\r\n  }\r\n\r\n  ErrorMessage(state = 'show') {\r\n    if (state === 'show') {\r\n      this.searchBarContainer.classList.add('error');\r\n    } else if (state === 'hide') {\r\n      this.searchBarContainer.classList.remove('error');\r\n    }\r\n  }\r\n}\r\n\r\nexport default new WeatherDisplay();\r\n"],"names":["$d3824bf2ef2465db$export$a9861bd62f48e142","$d3824bf2ef2465db$export$adb4bb4243526aef","latitude","longitude","API_KEY","requestType","response","fetch","data","json","$0f1d4402dffacf5b$export$ca000e230c0caa3e","position","weatherData","curUnit","date","time","hour","minute","seconds","day","setInterval","curDay","document","querySelector","curTime","curTimeUnit","curDate","Date","getHours","getMinutes","getSeconds","days","getDay","innerHTML","toString","$0f1d4402dffacf5b$var$userLocation","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","state","coords","$0f1d4402dffacf5b$export$2e592910e568afd0","$0f1d4402dffacf5b$var$updateState","$0f1d4402dffacf5b$export$e7fd20fad3cf4b5f","cityName","lat","lon","display_name","split","replace","err","$0f1d4402dffacf5b$export$7a171f172be0782e","console","log","curData","current","curForecast","forecast","curLocation","location","name","tempC","temp_c","tempF","temp_f","icon","condition","description","text","highlights","flTempC","feelslike_c","flTempF","feelslike_f","highTempC","forecastday","maxtemp_c","highTempF","maxtemp_f","lowTempC","mintemp_c","lowTempF","mintemp_f","avgTempC","avgtemp_c","avgTempF","avgtemp_f","wind","windSpeed","wind_kph","windDegree","wind_degree","astro","sunrise","sunset","forecastHour","map","obj","i","slice","$3a395c083ce013f4$var$WeatherDisplay","currentIcon","weatherCardDate","querySelectorAll","weatherCardIcon","weatherCardTemps","highlightTitle","highlightDetails","highlightDescription","units","unitC","unitF","curTemp","curText","curTextExtra","curCity","searchBarContainer","searchBar","searchIcon","updateCurIcon","iconSrc","src","updateTemp","temp","unit","innerText","updateCurText","textArr","updateWeatherCards","type","curHour","tempHours","forEach","updateHighlightCards","tempElements","Array","from","windElements","splice","Object","values","windDetails","pop","highlightsC","filter","highlightsF","detail","Math","round","windEl","addSwitchUnitHandler","handler","addEventListener","e","target","classList","contains","buttons","children","button","remove","activeButton","add","addSearchHandler","key","value","ErrorMessage","inputValue","$3a395c083ce013f4$export$2e2bcd8739ae039","$f50bd1f2915ed0f2$var$updateDisplay","$f50bd1f2915ed0f2$var$controlSearch"],"version":3,"file":"index.6b6f4d70.js.map"}